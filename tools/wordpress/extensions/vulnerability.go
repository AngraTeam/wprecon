package extensions

import (
	"encoding/json"

	"github.com/blackbinn/wprecon/internal/database"
	"github.com/blackbinn/wprecon/pkg/gohttp"
	"github.com/blackbinn/wprecon/pkg/handler"
)

type Jsonformat struct {
	ID struct {
	} `json:"_id"`
	Vulnerabilities []struct {
		Title      string   `json:"Title"`
		Published  string   `json:"Published"`
		References []string `json:"References"`
		Version    string   `json:"Version"`
	} `json:"Vulnerabilities"`
}

func GetVuln(plugin string, version string) *Jsonformat {
	defer handler.HandlerErrorGetVuln()

	http := gohttp.NewHTTPClient()

	http.SetURL("http://144.217.235.104:8777")
	http.SetURLDirectory("/v1/api/vulnerable/plugins/" + plugin + "/" + version)
	http.OnRandomUserAgent(database.Memory.GetBool("HTTP Options Random Agent"))
	http.OnTLSCertificateVerify(database.Memory.GetBool("HTTP Options TLS Certificate Verify"))

	response, err := http.Run()

	if err != nil {
		panic(err)
	}

	var jsonn Jsonformat

	if err = json.Unmarshal([]byte(response.Raw), &jsonn); err != nil {
		panic(err)
	}

	return &jsonn
}
